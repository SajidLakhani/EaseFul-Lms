{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Easefull\\\\Desktop\\\\project\\\\easeful-lms\\\\easeful-lms\\\\src\\\\components\\\\CourseFullView\\\\FirstSection\\\\ProgressBar.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\n\nfunction LinearProgressWithLabel(props) {\n  return /*#__PURE__*/_jsxDEV(Box, {\n    display: \"block\",\n    alignItems: \"center\",\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      textAlign: \"center\",\n      style: {\n        margin: '2px 0px',\n        color: 'white'\n      },\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        style: {\n          color: 'white',\n          fontSize: '10px',\n          fontFamily: 'inherit'\n        },\n        variant: \"body2\",\n        color: \"textSecondary\",\n        children: [`${Math.round(props.value)}%`, \" Complete\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      width: \"100%\",\n      mr: 1,\n      children: /*#__PURE__*/_jsxDEV(LinearProgress, {\n        variant: \"determinate\",\n        ...props\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 9\n  }, this);\n}\n\n_c = LinearProgressWithLabel;\nLinearProgressWithLabel.propTypes = {\n  /**\r\n   * The value of the progress indicator for the determinate and buffer variants.\r\n   * Value between 0 and 100.\r\n   */\n  value: PropTypes.number.isRequired\n};\nconst useStyles = makeStyles({\n  root: {\n    width: '100%',\n    marginTop: '-18px'\n  },\n  bar: {\n    \"& .MuiLinearProgress-barColorPrimary\": {\n      backgroundColor: '#43C8B1'\n    }\n  }\n});\nexport default function LinearWithValueLabel() {\n  _s();\n\n  const classes = useStyles();\n  const [progress, setProgress] = React.useState(10);\n  React.useEffect(() => {\n    const timer = setInterval(() => {\n      setProgress(prevProgress => prevProgress >= 100 ? 1 : prevProgress + 1);\n    }, 800);\n    return () => {\n      clearInterval(timer);\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    children: /*#__PURE__*/_jsxDEV(LinearProgressWithLabel, {\n      className: classes.bar,\n      value: progress\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 9\n  }, this);\n}\n\n_s(LinearWithValueLabel, \"79vm6oqwm9/OQF/l/AKo8jlMMvM=\", false, function () {\n  return [useStyles];\n});\n\n_c2 = LinearWithValueLabel;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"LinearProgressWithLabel\");\n$RefreshReg$(_c2, \"LinearWithValueLabel\");","map":{"version":3,"sources":["C:/Users/Easefull/Desktop/project/easeful-lms/easeful-lms/src/components/CourseFullView/FirstSection/ProgressBar.js"],"names":["React","PropTypes","makeStyles","LinearProgress","Typography","Box","LinearProgressWithLabel","props","margin","color","fontSize","fontFamily","Math","round","value","propTypes","number","isRequired","useStyles","root","width","marginTop","bar","backgroundColor","LinearWithValueLabel","classes","progress","setProgress","useState","useEffect","timer","setInterval","prevProgress","clearInterval"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,cAAP,MAA2B,kCAA3B;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,GAAP,MAAgB,uBAAhB;;AAGA,SAASC,uBAAT,CAAiCC,KAAjC,EAAwC;AACpC,sBACI,QAAC,GAAD;AAAK,IAAA,OAAO,EAAC,OAAb;AAAqB,IAAA,UAAU,EAAC,QAAhC;AAAA,4BACI,QAAC,GAAD;AAAK,MAAA,SAAS,EAAC,QAAf;AAAwB,MAAA,KAAK,EAAE;AAAEC,QAAAA,MAAM,EAAE,SAAV;AAAqBC,QAAAA,KAAK,EAAE;AAA5B,OAA/B;AAAA,6BACI,QAAC,UAAD;AAAY,QAAA,KAAK,EAAE;AAAEA,UAAAA,KAAK,EAAE,OAAT;AAAkBC,UAAAA,QAAQ,EAAE,MAA5B;AAAoCC,UAAAA,UAAU,EAAE;AAAhD,SAAnB;AAAgF,QAAA,OAAO,EAAC,OAAxF;AAAgG,QAAA,KAAK,EAAC,eAAtG;AAAA,mBAAwH,GAAEC,IAAI,CAACC,KAAL,CACtHN,KAAK,CAACO,KADgH,CAExH,GAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ,eAMI,QAAC,GAAD;AAAK,MAAA,KAAK,EAAC,MAAX;AAAkB,MAAA,EAAE,EAAE,CAAtB;AAAA,6BACI,QAAC,cAAD;AAAgB,QAAA,OAAO,EAAC,aAAxB;AAAA,WAA0CP;AAA1C;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YANJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAaH;;KAdQD,uB;AAgBTA,uBAAuB,CAACS,SAAxB,GAAoC;AAChC;AACJ;AACA;AACA;AACID,EAAAA,KAAK,EAAEb,SAAS,CAACe,MAAV,CAAiBC;AALQ,CAApC;AAQA,MAAMC,SAAS,GAAGhB,UAAU,CAAC;AACzBiB,EAAAA,IAAI,EAAE;AACFC,IAAAA,KAAK,EAAE,MADL;AAEFC,IAAAA,SAAS,EAAE;AAFT,GADmB;AAKzBC,EAAAA,GAAG,EAAE;AACD,4CAAwC;AACpCC,MAAAA,eAAe,EAAE;AADmB;AADvC;AALoB,CAAD,CAA5B;AAYA,eAAe,SAASC,oBAAT,GAAgC;AAAA;;AAC3C,QAAMC,OAAO,GAAGP,SAAS,EAAzB;AACA,QAAM,CAACQ,QAAD,EAAWC,WAAX,IAA0B3B,KAAK,CAAC4B,QAAN,CAAe,EAAf,CAAhC;AAEA5B,EAAAA,KAAK,CAAC6B,SAAN,CAAgB,MAAM;AAClB,UAAMC,KAAK,GAAGC,WAAW,CAAC,MAAM;AAC5BJ,MAAAA,WAAW,CAAEK,YAAD,IAAmBA,YAAY,IAAI,GAAhB,GAAsB,CAAtB,GAA0BA,YAAY,GAAG,CAA7D,CAAX;AACH,KAFwB,EAEtB,GAFsB,CAAzB;AAGA,WAAO,MAAM;AACTC,MAAAA,aAAa,CAACH,KAAD,CAAb;AACH,KAFD;AAGH,GAPD,EAOG,EAPH;AASA,sBACI;AAAK,IAAA,SAAS,EAAEL,OAAO,CAACN,IAAxB;AAAA,2BACI,QAAC,uBAAD;AAAyB,MAAA,SAAS,EAAEM,OAAO,CAACH,GAA5C;AAAiD,MAAA,KAAK,EAAEI;AAAxD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH;;GAlBuBF,oB;UACJN,S;;;MADIM,oB","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport LinearProgress from '@material-ui/core/LinearProgress';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Box from '@material-ui/core/Box';\r\n\r\n\r\nfunction LinearProgressWithLabel(props) {\r\n    return (\r\n        <Box display=\"block\" alignItems=\"center\">\r\n            <Box textAlign='center' style={{ margin: '2px 0px', color: 'white' }}>\r\n                <Typography style={{ color: 'white', fontSize: '10px', fontFamily: 'inherit' }} variant=\"body2\" color=\"textSecondary\">{`${Math.round(\r\n                    props.value,\r\n                )}%`} Complete</Typography>\r\n            </Box>\r\n            <Box width=\"100%\" mr={1}>\r\n                <LinearProgress variant=\"determinate\" {...props} />\r\n            </Box>\r\n\r\n        </Box>\r\n    );\r\n}\r\n\r\nLinearProgressWithLabel.propTypes = {\r\n    /**\r\n     * The value of the progress indicator for the determinate and buffer variants.\r\n     * Value between 0 and 100.\r\n     */\r\n    value: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        width: '100%',\r\n        marginTop: '-18px'\r\n    },\r\n    bar: {\r\n        \"& .MuiLinearProgress-barColorPrimary\": {\r\n            backgroundColor: '#43C8B1'\r\n        }\r\n    }\r\n});\r\n\r\nexport default function LinearWithValueLabel() {\r\n    const classes = useStyles();\r\n    const [progress, setProgress] = React.useState(10);\r\n\r\n    React.useEffect(() => {\r\n        const timer = setInterval(() => {\r\n            setProgress((prevProgress) => (prevProgress >= 100 ? 1 : prevProgress + 1));\r\n        }, 800);\r\n        return () => {\r\n            clearInterval(timer);\r\n        };\r\n    }, []);\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <LinearProgressWithLabel className={classes.bar} value={progress} />\r\n        </div>\r\n    );\r\n}"]},"metadata":{},"sourceType":"module"}